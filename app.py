# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uNhFv6ieu4TQ68GCD43Mc9rflX4J1xaH
"""

import streamlit as st
import pandas as pd
import plotly.express as px

st.set_page_config(page_title="AEP ZIP Market Analysis", layout="wide")

st.title("üìä Appalachian Power ‚Äì ZIP Code Market Analysis")
st.caption("Preloaded dataset ‚Ä¢ Select a ZIP to explore sector mix and EE opportunities")

FILE_PATH = "AEP_Zips_Processed.xlsx"

@st.cache_data(show_spinner=False)
def load_data(path: str):
    try:
        pivot = pd.read_excel(path, sheet_name="ZIP x Sector")
        top5 = pd.read_excel(path, sheet_name="Top5 by ZIP")
        ee_map = pd.read_excel(path, sheet_name="With EE Mapping")
    except Exception as e:
        st.error(f"Error loading Excel: {e}")
        st.stop()

    # Normaliza tipos
    for df in (top5, ee_map):
        if "ESTAB" in df.columns:
            df["ESTAB"] = pd.to_numeric(df["ESTAB"], errors="coerce").fillna(0).astype(int)

    return pivot, top5, ee_map

pivot, top5, ee_map = load_data(FILE_PATH)

# --- Sidebar ---
st.sidebar.header("Filters")
all_zips = sorted(ee_map["NAME"].dropna().unique())
zip_selected = st.sidebar.selectbox("Select a ZIP Code", all_zips)

# --- ZIP view ---
st.subheader(f"üìç ZIP: {zip_selected}")
zip_data = ee_map[ee_map["NAME"] == zip_selected]

# Top 5 chart
top5_zip = top5[top5["NAME"] == zip_selected][["NAICS2017_LABEL", "ESTAB"]]
if not top5_zip.empty:
    fig_top5 = px.bar(
        top5_zip.sort_values("ESTAB"),
        x="ESTAB", y="NAICS2017_LABEL",
        orientation="h", text="ESTAB",
        title="Top 5 sectors by establishments"
    )
    st.plotly_chart(fig_top5, use_container_width=True)
else:
    st.info("No Top 5 data available for this ZIP.")

# Pie chart of all sectors
if not zip_data.empty:
    fig_pie = px.pie(
        zip_data, names="NAICS2017_LABEL", values="ESTAB",
        title="Sector distribution (all sectors in ZIP)"
    )
    st.plotly_chart(fig_pie, use_container_width=True)

    st.markdown("### ‚ö° EE Opportunities by sector")
    st.dataframe(zip_data[["NAICS2017_LABEL", "ESTAB", "EE_Opportunity"]]
                 .sort_values("ESTAB", ascending=False),
                 use_container_width=True)
else:
    st.warning("No data for selected ZIP.")

# --- Aggregate view ---
st.subheader("üìà Aggregate across all ZIPs")
sector_totals = (ee_map.groupby("NAICS2017_LABEL", as_index=False)["ESTAB"].sum()
                 .sort_values("ESTAB", ascending=False))
fig_totals = px.bar(
    sector_totals.head(10).sort_values("ESTAB"),
    x="ESTAB", y="NAICS2017_LABEL",
    orientation="h", title="Top 10 sectors across all ZIPs"
)
st.plotly_chart(fig_totals, use_container_width=True)

st.markdown("### Heatmap preview ‚Äî Establishments by ZIP and Sector (scrollable table)")
st.dataframe(pivot.set_index("NAME"), use_container_width=True)

# --- Download filtered ZIP data
csv_bytes = zip_data.to_csv(index=False).encode("utf-8")
st.download_button(
    "Download selected ZIP data (CSV)",
    data=csv_bytes,
    file_name=f"{zip_selected.replace(' ', '_')}_analysis.csv",
    mime="text/csv"
)

st.caption("Tip: update the Excel in the repo to refresh the app‚Äôs data.")